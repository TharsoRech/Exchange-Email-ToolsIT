<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAASExMAFBUVABYXFwAYGhoDFhcXABQVFQAUFRUAFhcXABgaGgMWFxcAFBUVABQVFQAWFxcAGBoaAxYX
        FwAUFRUAFBUVABYXFwAYGhoDFhcXABQVFQAUFRUAFhcXABgaGgMWFxcAFBUVABQVFQAWFxcAGBoaAxYX
        FwAUFRUAFBUVABUWFgAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUW
        FgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUW
        FgAWFxcAGRoaHxYXFwAUFRUAFxkZABYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABka
        Gh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABka
        Gh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAUFRUAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUW
        FgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUW
        FgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGBoaHxITEwAWFxcAGRoaHxYXFwAVFhYAFRYWABYX
        FwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYX
        FwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAExQUABUWFgAWFxcAGRoaHxYX
        FwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYX
        FwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABQVFQAVFhYAFRYWABUW
        FgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUW
        FgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFBUVABcZ
        GQAWFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABka
        Gh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABka
        Gh8WFxcAFBUVABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABkZFwCLSg0ftFwKALRc
        CgCxWQcArlYFALFaCR+0XAoAtFwKALFZBwCuVgUAsVoJH7RcCgC0XAoAsVkHAK5WBQCxWgkftFwKALRc
        CgCxWQcApFIFADkqGh8SExMAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAVTIRAPl4
        Af/4eAL/+XgB//l4Af/5eAH/+XgB//h4Av/5eAH/+XgB//l4Af/5eAH/+HgC//l4Af/5eAH/+XgB//l4
        Af/4eAL/+XgB//l4Af/5eAH/oE8F/xMUFAAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYX
        FwBfNQ0A+XgB//l4Af/4eAL/+XgB//l4Af/5eAH/+XgB//h4Av/5eAH/+XgB//l4Af/5eAH/+HgC//l4
        Af/5eAH/+XgB//l4Af/4eAL/+XgB//l4Af+xWAf/FRYWABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUW
        FgAWFxcAGRoaH1s0DwD5eAH/+XgB//l4Af/4eAL/+XgB//l4Af/5eAH/+XgB//h4Av/5eAH/+XgB//l4
        Af/5eAH/+HgC//l4Af/5eAH/+XgB//l4Af/4eAL/+XgB/7RbCf8XGRkAFhcXABUWFgAVFhYAFhcXABka
        Gh8WFxcAFRYWABUWFgAWFxcAXzgTH/l4Af/5eAH/+XgB//l4Af/4eAL/+XgB//l4Af/5eAH/+XgB//h4
        Av/5eAH/+XgB//l4Af/5eAH/+HgC//l4Af/5eAH/+XgB//l4Af/4eAL/tFsJ/xQVFQAZGhofFhcXABUW
        FgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgBhORMA+HgC//l4Af/5eAH/+XgB//l4Af/4eAL/+XgB//l4
        Af/5eAH/+XgB//h4Av/5eAH/+XgB//l4Af/5eAH/+HgC//l4Af/5eAH/+XgB//l4Af+yWgj/EhMTABYX
        FwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWAFw1EAD5eAH/+HgC//l4Af/5eAH/+XgB//l4
        Af/4eAL/+XgB//l4Af/5eAH/+XgB//h4Av/5eAH/+XgB//l4Af/5eAH/+HgC//l4Af/5eAH/+XgB/65W
        Bf8TFBQAFRYWABYXFwAZGhofFhcXABUWFgC5XQgA6nECAOhxAx/SZwQAWTINAPl4Af/5eAH/+HgC//l4
        Af/5eAH/+XgB//l4Af/4eAL/+XgB/7ZaBv+oVw3/6nEB//h4Av/5eAH/+XgB//l4Af/5eAH/+HgC//l4
        Af/5eAH/sVgH/xUWFgAVFhYAFRYWABYXFwAZGhofFhcXAE8sCwB6Qg7/fEUR/2M4Ef9bNA8A+XgB//l4
        Af/5eAH/+HgC//l4Af/5eAH/+XgB/95tBv9TMhL/SS4TAGo7DwAqHRAAtV4N//h4Av/5eAH/+XgB//l4
        Af/5eAH/+HgC//l4Af+0Wwn/FxkZABYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXAF84
        Ex/5eAH/+XgB//l4Af/5eAH/+HgC//d3Av+WTgr/LiIW/5tQCwD2dwIf+XgB/9JrC/82IQ0AbEAWBuNu
        Av/5eAH/+XgB//l4Af/5eAH/+HgC/7RbCf8UFRUAGRoaHxYXFwBELBQAk0sJAJJKCACWTgwfmVANAJhQ
        DQCCQwkAYTkTAPh4Av/5eAH/+XgB//l4Af/Xagf/SS0T/1gzEQDcawMA+XgB//l4Af/4eAL/+XgB//V2
        Af+IRggALyMWAJ9QB//4eAL/+XgB//l4Af/5eAH/sloI/xITEwAWFxcAGRoaH08vEADAYAf/wmEI/8Jh
        CP+/Xwf/vF0F/65YCf9cNRAA+XgB//h4Av/1dgL/i0kM/y8iFf+mVQoA93gCMvl4Af/5eAH/+XgB//l4
        Af/4eAL/+XgB//l4Af/abQj/RywTAGE8GR/dawP/+XgB//l4Af+uVgX/ExQUABUWFgAWFxcAGRoaHxYX
        FwAVFhYAFRYWABYXFwAZGhofFhcXAFkyDQD5eAH/3GwF/z8pFP9iOBAA5G4CAPl4Af/5eAH/+HgC//l4
        Af/5eAH/+XgB//l4Af/4eAL/+XgB//l4Af/3dwL/jkYEADImGh+gTgP/+XgB/7FYB/80JBUATS4RAEss
        DwBNLhEAUTIVH1IzFABNLhEASywPAE0uEQBFLxkfWzQPAPl4Af/gbwj/tVsIAPh4Atf5eAH/+XgB//l4
        Af/5eAH/+HgC//l4Af/5eAH/+XgB//l4Af/4eAL/+XgB//l4Af/5eAH/3WsD/7dfDR/5eAH/tFsJ/7hb
        BQD5eAH/+XgB//l4Af/5eAH/+HgC//l4Af/5eAH/+XgB/+xzBP9UNRcf+XgB//l4Af/5eAH/+XgB//h4
        Av/5eAH/+XgB//l4Af/5eAH/+HgC//l4Af/5eAH/+XgB//l4Af/4eAL/+XgB//l4Af/5eAH/+XgB//h4
        Av+mVQr/GhgUACchGeskHRboIhsU6CIbFOglHhfoJyEZ6yQdFugiGxToHhoW6BYYFwB8RRH2oFAH/6JS
        CP+mVgv/plYM/6RUC/+gUAf/olII/6ZWC/+mVgz/pFQL/6BQB/+iUgj/plYL/6ZWDP+kVAv/oFAH/6JS
        CP+mVgv/nFEM/y0hFf8SExMAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYX
        FwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYX
        FwAZGhofFhcXABUWFgAVFhYAFhcXABMUFAAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYX
        FwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYX
        FwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAUFRUAFRYWABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUW
        FgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUW
        FgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABQVFQAXGRkAFhcXABUWFgAVFhYAFhcXABka
        Gh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABka
        Gh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABQVFQAZGhofFhcXABUW
        FgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAZGhofFhcXABUW
        FgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYXFwAYGhofEhMTABYX
        FwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYX
        FwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYXFwAVFhYAFRYWABYX
        FwATFBQAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYX
        FwAVFhYAFRYWABYXFwAZGhofFhcXABUWFgAVFhYAFhcXABkaGh8WFxcAFRYWABUWFgAWFxcAGRoaHxYX
        FwAVFhYAFBUVABQVFQATFBQAEhMTABQVFQAXGRkfFRYWABMUFAASExMAFBUVABcZGR8VFhYAExQUABIT
        EwAUFRUAFxkZHxUWFgATFBQAEhMTABQVFQAXGRkfFRYWABMUFAASExMAFBUVABcZGR8VFhYAExQUABIT
        EwAUFRUAFxkZHxUWFgASExMA73ve9/e973v73ve9ve973t73ve/ve973973ve/ve972973ve3uAAAO9g
        AAD3oAAA+8AAAL3gAADe4AAA72AAAPYgDgD7wBEAveBgwNAggCDvYwAQ96QAAIAAAACAIAAA3ve97+97
        3vf3ve97+973vb3ve97e973v73ve9/e973s=
</value>
  </data>
</root>